<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- @Transactional어노테이션을 이용한 트랜잭션 관리를 활성화 ( 상단의 beans에서도 추가) -->
	<tx:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/emp/**" location="/emp/"/>
	<resources mapping="/getimg/**" location="/emp/"/>
	<resources mapping="/upload/**" location="/upload/"/>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!--  컨트롤러, 서비스  스프링빈으로 등록하는위치 -->
	<context:component-scan base-package="mobomobo.editor, mobomobo.main, mobomobo.controller, mobomobo.service" />
	
	
		<!-- JSON응답용 jsonView를 스프링 bean으로 등록 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8" />
	</beans:bean>
	
	<!-- 사용자가 추가함 (ViewResolver) 설정 -->
	<beans:bean class ="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	
		<!--  MultipartResolver 설정 -->
	<!-- 파일 업로드 요청(multipart/form-data)을 처리하는 클래스 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
		<!-- 메모리에서 파일을 처리하는 최대 사이즈 제한 : 1MB -->
		<beans:property name="maxInMemorySize" value="1048576"/>
		
		<!-- 파일업로드 허용 최대 사이즈 제한 : 10MB -->
		<beans:property name="maxUploadSize" value="10485760"/>
		
		<!-- 업로드된 파일 당 최대 사이즈 제한 :5MB -->
		<beans:property name="maxUploadSizePerFile" value="5242880"/>
		
	</beans:bean>
	
	<!-- 웹 소켓 핸들러 -->
    <websocket:handlers >
        <websocket:mapping path="/mobo/market/chatroom" handler="ChatHandler"/>
         <websocket:handshake-interceptors>
         	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
         </websocket:handshake-interceptors>
        <websocket:sockjs />
    </websocket:handlers>
 
    <beans:bean id="ChatHandler" class="mobomobo.util.chat.ChatHandler"/>
    
	
	 <interceptors>
<!-- 		<interceptor> -->
<!-- 			<mapping path="/mobo/movie/**"/> -->
			
<<<<<<< HEAD
<!-- 			<exclude-mapping path="/mobo/movie/movierecom"/> -->
<!-- 			<exclude-mapping path="/mobo/movie/moviebestboard"/> -->
=======
			<exclude-mapping path="/mobo/movie/movierecom"/>
			<exclude-mapping path="/mobo/movie/moviebestboard"/>
			<exclude-mapping path="/mobo/movie/debate"/>
>>>>>>> bc14ae03ef3df9637a403bb83d730ab62b723060
			
<!-- 			<beans:bean class="mobomobo.interceptor.MovieRecomInterceptor"/> -->
<!-- 		</interceptor> -->
		
		<interceptor>
			<mapping path="/admin/**" />
			
			<beans:bean class="mobomobo.interceptor.AdminPageInterceptor"/>
		</interceptor>
	</interceptors>
	
</beans:beans>
